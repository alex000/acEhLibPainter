diff -uN EhLib 5.2_orig/DBCtrlsEh.pas DBCtrlsEh.pas
--- EhLib 5.2_orig/DBCtrlsEh.pas	Mon Mar 29 15:22:30 2010
+++ DBCtrlsEh.pas	Sun Jun  6 12:18:32 2010
@@ -3273,6 +3273,7 @@
     end;
 
     ControlRec.ButtonLine.Visible := Flat and Button.Visible and not ThemesEnabled;
+    ControlRec.ButtonLine.Visible := false; // by Alex
     if Flat and Button.Visible and not ThemesEnabled
       then ControlRec.ButtonLine.Width := 1
       else ControlRec.ButtonLine.Width := 0;
@@ -3307,6 +3308,7 @@
       FEditButtonControlList[i].EditButtonControl.Parent := Self;
       FEditButtonControlList[i].ButtonLine := TShape.Create(Self);
       FEditButtonControlList[i].ButtonLine.Parent := Self;
+      FEditButtonControlList[i].ButtonLine.Visible := false;  // by Alex
     end;
   end;

diff -uN EhLib 5.2_orig/ToolCtrlsEh.pas ToolCtrlsEh.pas
--- EhLib 5.2_orig/ToolCtrlsEh.pas	Tue Mar  2 13:58:34 2010
+++ ToolCtrlsEh.pas	Sun Jun  6 13:07:30 2010
@@ -842,6 +842,11 @@
 procedure BroadcastPerformMessageFor(Owner: TComponent; ForClass: TControlClass;
   Msg: Cardinal; WParam, LParam: Longint);
 
+procedure DrawCheck(DC: HDC; R: TRect; AState: TCheckBoxState; AEnabled, AFlat, ADown, AActive: Boolean);  // by Alex
+procedure DrawDropDownButton(DC: HDC; ARect: TRect; Enabled, Flat, Active, Down: Boolean);                 // by Alex
+procedure DrawUpDownButton(Canvas: TCanvas; ARect: TRect; Enabled, Flat, Active, Down, DownDirection: Boolean);    // by Alex
+procedure DrawEllipsisButton(Canvas: TCanvas; ARect: TRect; Enabled, Active, Flat, Pressed: Boolean);              // by Alex
+procedure DrawPlusMinusButton(Canvas: TCanvas; ARect: TRect; Enabled, Active, Flat, Pressed, Plus: Boolean);       // by Alex
 {$IFNDEF EH_LIB_8}
 
 (*
@@ -1666,6 +1671,7 @@
   DRect: TRect;
 //    Brush: HBRUSH;
 begin
+  Flat := false; // by Alex
   DRect := ARect;
 //  LPtoDP(DC, DRect, 2);
   WindowsLPtoDP(Canvas.Handle, DRect);
@@ -1791,6 +1797,7 @@
   BitmapInfo: TButtonBitmapInfoEh;
   Bitmap: TBitmap;
 begin
+  Flat := false; // by Alex
   SaveRgn := 0; r := 0;
 (*{$IFDEF EH_LIB_7}
   if (Style = bcsCheckboxEh) and ThemeServices.ThemesEnabled then
@@ -1949,19 +1956,20 @@
   DC: HDC;
   SysMetrics: TTextMetric;
 begin
-  DC := GetDC(0);
-  GetTextMetrics(DC, SysMetrics);
-  ReleaseDC(0, DC);
-  Result := Round(SysMetrics.tmHeight / 3 * 2);
-  if ThemesEnabled then
-  begin
-    if Result mod 2 = 1 then Inc(Result);
-  end else
-  begin
-    if Result mod 2 = 0 then Inc(Result);
-  end;
-  if Result > GetSystemMetrics(SM_CXVSCROLL)
-    then Result := GetSystemMetrics(SM_CXVSCROLL);
+  Result := 16;  // by Alex
+//  DC := GetDC(0);
+//  GetTextMetrics(DC, SysMetrics);
+//  ReleaseDC(0, DC);
+//  Result := Round(SysMetrics.tmHeight / 3 * 2);
+//  if ThemesEnabled then
+//  begin
+//    if Result mod 2 = 1 then Inc(Result);
+//  end else
+//  begin
+//    if Result mod 2 = 0 then Inc(Result);
+//  end;
+//  if Result > GetSystemMetrics(SM_CXVSCROLL)
+//    then Result := GetSystemMetrics(SM_CXVSCROLL);
 end;
 
 function DefaultEditButtonHeight(EditButtonWidth: Integer; Flat: Boolean): Integer;
@@ -5595,7 +5603,7 @@
 end;
 
 initialization
-  FlatButtonWidth := GetDefaultFlatButtonWidth;
+  FlatButtonWidth := 16;//GetDefaultFlatButtonWidth; // by Alex
   ButtonsBitmapCache := TButtonsBitmapCache.Create;
   DummyPopupListboxItemEh := TPopupListboxItemEh.Create;
   GetCheckSize;
